<Window x:Class="DotNetEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DotNetEditor"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:converter="clr-namespace:DotNetEditor.Converters"
        mc:Ignorable="d"
        UseLayoutRounding="True">
    <Window.Resources>
        <ResourceDictionary>
            <converter:CommandConverter x:Key="Command" />

            <Style x:Key="Title"
                   TargetType="Label">
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.InactiveCaptionTextBrushKey}}" />
            </Style>

            <Style x:Key="AvalonEdit"
                   TargetType="avalonEdit:TextEditor">
                <Setter Property="FontFamily"
                        Value="Consolas" />
                <Setter Property="FontSize"
                        Value="12pt" />
                <Setter Property="HorizontalScrollBarVisibility"
                        Value="Auto" />
                <Setter Property="VerticalScrollBarVisibility"
                        Value="Auto" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding x:Name="Open"
                        Command="ApplicationCommands.Open"
                        CanExecute="Open_CanExecute"
                        Executed="Open_Executed" />
        <CommandBinding x:Name="Save"
                        Command="ApplicationCommands.Save"
                        CanExecute="Save_CanExecute"
                        Executed="Save_Executed" />
        <CommandBinding x:Name="SaveAs"
                        Command="ApplicationCommands.SaveAs"
                        CanExecute="SaveAs_CanExecute"
                        Executed="SaveAs_Executed" />
        <CommandBinding x:Name="Run"
                        Command="local:AppCommands.Run"
                        CanExecute="Run_CanExecute"
                        Executed="Run_Executed" />
        <CommandBinding x:Name="About"
                        Command="local:AppCommands.About"
                        CanExecute="About_CanExecute"
                        Executed="About_Executed" />
    </Window.CommandBindings>
    
    <DockPanel>
        <ToolBar x:Name="toolBar"
                 DockPanel.Dock="Top">
            <ToolBar.Resources>
                <Style TargetType="Separator">
                    <Setter Property="Height"
                            Value="24" />
                    <Setter Property="Width"
                            Value="1" />
                </Style>
                <Style TargetType="Image">
                    <Setter Property="Height"
                            Value="30" />
                </Style>
                <Style TargetType="RadioButton"
                       BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" />
            </ToolBar.Resources>
            <Button Command="Open"
                    ToolTip="{Binding Command, Converter={StaticResource Command}, RelativeSource={RelativeSource Self}}">
                <Image Source="Images/open_document-30.png" />
            </Button>
            <Button Command="Save"
                    ToolTip="{Binding Command, Converter={StaticResource Command}, RelativeSource={RelativeSource Self}}">
                <Image Source="Images/save-30.png" />
            </Button>
            <Button Command="SaveAs"
                    ToolTip="{Binding Command, Converter={StaticResource Command}, RelativeSource={RelativeSource Self}}">
                <Image Source="Images/save_as-30.png" />
            </Button>
            <Separator />
            <Button Command="local:AppCommands.Run"
                    ToolTip="{Binding Command, Converter={StaticResource Command}, RelativeSource={RelativeSource Self}}">
                <Image Source="Images/play-30.png" />
            </Button>
            <Separator />
            <StackPanel Orientation="Horizontal">
                <RadioButton x:Name="buttonCodeTypeVB"
                             ToolTip="VB mode"
                             Margin="0,0,0,-0.2"
                             VerticalAlignment="Bottom"
                             Checked="buttonCodeTypeVB_Checked">
                    <Image Source="Images/vb-30.png" />
                </RadioButton>
                <RadioButton x:Name="buttonCodeTypeCS"
                             ToolTip="C# mode"
                             Checked="buttonCodeTypeCS_Checked">
                    <Image Source="Images/cs-30.png" />
                </RadioButton>
            </StackPanel>
            <Separator />
            <ToggleButton x:Name="buttonWordWrap"
                          Click="buttonWordWrap_Click"
                          ToolTip="Word Wrap for Output">
                <Image Source="Images/down_left-30.png" />
            </ToggleButton>
            <Separator />
            <Button Command="local:AppCommands.About"
                    ToolTip="{Binding Command, Converter={StaticResource Command}, RelativeSource={RelativeSource Self}}">
                <Image Source="Images/about-30.png" />
            </Button>
        </ToolBar>
        <Grid DockPanel.Dock="Right"
              Width="200">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="3*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>
            <Label Style="{StaticResource Title}">Input Data</Label>
            <avalonEdit:TextEditor x:Name="InputData"
                                   Style="{StaticResource AvalonEdit}"
                                   Grid.Row="1">
                Enter input data here...
            </avalonEdit:TextEditor>
            <Label Grid.Row="2"
                   Style="{StaticResource Title}">Namespace Imports</Label>
            <avalonEdit:TextEditor x:Name="NSImports"
                                   Style="{StaticResource AvalonEdit}"
                                   Grid.Row="3">
                Enter input data here...
            </avalonEdit:TextEditor>
            <Label Grid.Row="4"
                   Style="{StaticResource Title}">Assembly Imports</Label>
            <avalonEdit:TextEditor x:Name="AssemblyImports"
                                   Style="{StaticResource AvalonEdit}"
                                   Grid.Row="5">
                Enter input data here...
            </avalonEdit:TextEditor>
        </Grid>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <avalonEdit:TextEditor x:Name="TextEditor"
                                   Style="{StaticResource AvalonEdit}"
                                   ShowLineNumbers="True"
                                   TextChanged="TextEditor_TextChanged"
                                   Margin="0,0,0,0">
                Code goes here...
            </avalonEdit:TextEditor>
            <GridSplitter Width="4"
                          Grid.Column="1"
                          Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                          ResizeBehavior="PreviousAndNext"
                          Margin="0,0,0,0" />
            <local:AvalonRichTextBox x:Name="OutputArea"
                                     Style="{StaticResource AvalonEdit}"
                                     IsReadOnly="True"
                                     Grid.Column="2"
                                     Background="Black"
                                     Foreground="Silver"
                                     Margin="4,0,0,0">
                Output text...
            </local:AvalonRichTextBox>
        </Grid>
    </DockPanel>
</Window>
